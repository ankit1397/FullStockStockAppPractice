package com.example.StockPractice.helper;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import org.apache.commons.csv.CSVFormat;
import org.apache.commons.csv.CSVParser;
import org.springframework.web.multipart.MultipartFile;

import com.example.StockPractice.model.StockData;

public class CSVHelper {
	public static String TYPE = "text/csv";
	static String[] HEADERs = { "Series_reference", "Period", "Data_value", "Suppressed", "STATUS", "UNITS",
			"Magnitude", "Subject", "Group", "Series_title_1", "Series_title_2", "Series_title_3", "Series_title_4",
			"Series_title_5" };

	public static boolean hasCSVFormat(MultipartFile file) {

		if (!TYPE.equals(file.getContentType())) {
			return false;
		}

		return true;
	}
	
	public static List<StockData> csvToStockData(InputStream is) {
	    try (BufferedReader fileReader = new BufferedReader(new InputStreamReader(is, "UTF-8"));
	        CSVParser csvParser = new CSVParser(fileReader,
	            CSVFormat.DEFAULT.withFirstRecordAsHeader().withIgnoreHeaderCase().withTrim());) {

	      List<StockData> stockDatas = new ArrayList<StockData>();

	      Iterable<CSVRecord> csvRecords = csvParser.getRecords();

	      for (CSVRecord csvRecord : csvRecords) {
	    	  StockData stockData = new StockData(
	              Long.parseLong(csvRecord.get("Id")),
	              csvRecord.get("Title"),
	              csvRecord.get("Description"),
	              Boolean.parseBoolean(csvRecord.get("Published"))
	            );

	    	  stockDatas.add(stockData);
	      }

	      return stockDatas;
	    } catch (IOException e) {
	      throw new RuntimeException("fail to parse CSV file: " + e.getMessage());
	    }
	  }
}
